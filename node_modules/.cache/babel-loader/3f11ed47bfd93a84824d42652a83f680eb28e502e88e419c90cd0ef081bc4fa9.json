{"ast":null,"code":"export var convertIpToBin=function convertIpToBin(ip){return ip.split('.').map(function(octet){return parseInt(octet,10).toString(2).padStart(8,'0');});};export var convertIpToDec=function convertIpToDec(ip){return ip.map(function(octet){return String(parseInt(octet,2));});};export var calculateBroadcast=function calculateBroadcast(ip,mask){return mask.map(function(mOctet,i){return mOctet.split('').map(function(bit,j){return bit==='1'?ip[i][j]:'1';}).join('');});};export var calculateNetworkAddress=function calculateNetworkAddress(ip,mask){return mask.map(function(mOctet,i){return mOctet.split('').map(function(bit,j){return bit==='1'?ip[i][j]:'0';}).join('');});};export var netmaskShort=function netmaskShort(netmask){return netmask.join('').split('').reduce(function(sum,bit){return sum+parseInt(bit,10);},0);};export var calculateHostsCount=function calculateHostsCount(netmask){return Math.pow(2,32-netmaskShort(netmask))-2;};export var addOneBin=function addOneBin(octet){var newOctet=parseInt(octet,2)+1;return parseInt(String(newOctet),10).toString(2).padStart(8,'0');};export var removeOneBin=function removeOneBin(octet){var newOctet=parseInt(octet,2)-1;return parseInt(String(newOctet),10).toString(2).padStart(8,'0');};export var calculateGatewayAddress=function calculateGatewayAddress(broadcast){return broadcast.map(function(octet,octetNo){return octetNo===3?removeOneBin(octet):octet;});};export var calculateFirstAddressAddress=function calculateFirstAddressAddress(network){return network.map(function(octet,octetNo){return octetNo===3?addOneBin(octet):octet;});};export var addSpaceAtposition=function addSpaceAtposition(address,position){return address.map(function(octet,octetNo){return octet.split('').map(function(bit,bitNo){return octetNo*8+(bitNo+1)===position?\"\".concat(bit,\" \"):bit;}).join('');});};export var netmaskLengthToIp=function netmaskLengthToIp(length){return convertIpToDec(['','','',''].map(function(_,octetNo){return new Array(8).fill('0').map(function(_,bitNo){return octetNo*8+(bitNo+1)>length?'0':'1';}).join('');}));};","map":{"version":3,"names":["convertIpToBin","ip","split","map","octet","parseInt","toString","padStart","convertIpToDec","String","calculateBroadcast","mask","mOctet","i","bit","j","join","calculateNetworkAddress","netmaskShort","netmask","reduce","sum","calculateHostsCount","Math","pow","addOneBin","newOctet","removeOneBin","calculateGatewayAddress","broadcast","octetNo","calculateFirstAddressAddress","network","addSpaceAtposition","address","position","bitNo","concat","netmaskLengthToIp","length","_","Array","fill"],"sources":["C:/Users/Infin/Documents/git/network-calculator/src/addressCalculations.ts"],"sourcesContent":["export const convertIpToBin = (ip: string) =>\r\n  ip\r\n    .split('.')\r\n    .map((octet) => parseInt(octet, 10).toString(2).padStart(8, '0'));\r\nexport const convertIpToDec = (ip: any[]) =>\r\n  ip.map((octet) => String(parseInt(octet, 2)));\r\nexport const calculateBroadcast = (ip: any[], mask: any[]): string[] =>\r\n  mask.map((mOctet, i) =>\r\n    mOctet\r\n      .split('')\r\n      .map((bit: string, j: string | number) => (bit === '1' ? ip[i][j] : '1'))\r\n      .join('')\r\n  );\r\nexport const calculateNetworkAddress = (ip: any[], mask: any[]): string[] =>\r\n  mask.map((mOctet, i) =>\r\n    mOctet\r\n      .split('')\r\n      .map((bit: string, j: string | number) => (bit === '1' ? ip[i][j] : '0'))\r\n      .join('')\r\n  );\r\n\r\nexport const netmaskShort = (netmask: string[]) =>\r\n  netmask\r\n    .join('')\r\n    .split('')\r\n    .reduce((sum, bit) => sum + parseInt(bit, 10), 0);\r\n\r\nexport const calculateHostsCount = (netmask: string[]) =>\r\n  Math.pow(2, 32 - netmaskShort(netmask)) - 2;\r\n\r\nexport const addOneBin = (octet: string): string => {\r\n  const newOctet = parseInt(octet, 2) + 1;\r\n  return parseInt(String(newOctet), 10).toString(2).padStart(8, '0');\r\n};\r\n\r\nexport const removeOneBin = (octet: string): string => {\r\n  const newOctet = parseInt(octet, 2) - 1;\r\n  return parseInt(String(newOctet), 10).toString(2).padStart(8, '0');\r\n};\r\n\r\nexport const calculateGatewayAddress = (broadcast: string[]) =>\r\n  broadcast.map((octet, octetNo) =>\r\n    octetNo === 3 ? removeOneBin(octet) : octet\r\n  );\r\nexport const calculateFirstAddressAddress = (network: string[]) =>\r\n  network.map((octet, octetNo) => (octetNo === 3 ? addOneBin(octet) : octet));\r\n\r\nexport const addSpaceAtposition = (address: string[], position): string[] =>\r\n  address.map((octet, octetNo) =>\r\n    octet\r\n      .split('')\r\n      .map((bit, bitNo) =>\r\n        octetNo * 8 + (bitNo + 1) === position ? `${bit} ` : bit\r\n      )\r\n      .join('')\r\n  );\r\n\r\nexport const netmaskLengthToIp = (length: number): string[] =>\r\n  convertIpToDec(\r\n    ['', '', '', ''].map((_, octetNo) =>\r\n      new Array(8)\r\n        .fill('0')\r\n        .map((_, bitNo) => (octetNo * 8 + (bitNo + 1) > length ? '0' : '1'))\r\n        .join('')\r\n    )\r\n  );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}